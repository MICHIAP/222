<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LUDO-BULBA</title>
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <script src="https://unpkg.com/@tonconnect/sdk@latest/dist/tonconnect-sdk.min.js"></script>

    <style>
        /* Подключение шрифта Inter */
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;900&display=swap');

        /* Общие стили */
        :root {
            --notification-bg: #333;
            --notification-text: #fff;
        }

        body {
            margin: 0;
            font-family: 'Inter', -apple-system, BlinkMacMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif; /* Применяем Inter */
            background-color: var(--tg-theme-bg-color, #0d0d0d); /* Используем цвета темы Telegram */
            color: var(--tg-theme-text-color, #f0f0f0);
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            overflow-x: hidden;
            touch-action: pan-y;
        }

        html {
            font-size: 16px;
        }
        @media (max-width: 480px) { html { font-size: 14px; } }
        @media (max-width: 320px) { html { font-size: 12px; } }

        /* ----- Loading Overlay Styles ----- */
        #loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: var(--tg-theme-bg-color, #0d0d0d);
            z-index: 10001;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            color: var(--tg-theme-hint-color, #888);
            font-size: 1rem;
            transition: opacity 0.3s ease, background-color 0.5s ease;
        }

        .loader {
            border: 5px solid var(--tg-theme-secondary-bg-color, #333);
            border-top: 5px solid #2b99f3; /* Активный цвет TON */
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
            margin-bottom: 15px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        #loading-status-text {
            display: none;
            text-align: center;
            padding: 1rem;
            max-width: 90%;
            border-radius: 0.5rem;
        }

        #app-content-wrapper {
             display: none;
             flex-direction: column;
             min-height: 100vh;
        }

        .content-section {
            flex-grow: 1;
            padding: 1.25rem;
            padding-bottom: 5.5rem; /* Учитываем высоту меню */
            overflow-y: auto;
            display: none;
            width: 100%;
            box-sizing: border-box;
            max-width: 100%;
            margin: 0 auto;
        }

        .content-section.active {
            display: block;
        }

        /* ----- CUSTOM NOTIFICATION ----- */
        #custom-notification {
            position: fixed;
            top: 1rem;
            left: 50%;
            transform: translateX(-50%) translateY(-100%);
            background-color: var(--notification-bg);
            color: var(--notification-text);
            padding: 0.75rem 1.25rem;
            border-radius: 0.75rem;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s ease, transform 0.3s ease;
            z-index: 10000;
            font-size: 0.9rem;
            text-align: center;
        }

        #custom-notification.show {
            opacity: 1;
            visibility: visible;
            transform: translateX(-50%) translateY(0);
        }

        /* ----- SHARED BALANCE COMPONENT ----- */
        .shared-balance-component {
            display: none;
            padding: 0.5rem 1.25rem;
            background-color: var(--tg-theme-header-bg-color, #1a1a1a);
            border-bottom: 1px solid var(--tg-theme-border-color, #333);
            justify-content: space-between;
            align-items: center;
            width: 100%;
            box-sizing: border-box;
            position: sticky;
            top: 0;
            z-index: 990;
        }

        .user-info {
            display: flex;
            align-items: center;
            font-size: 0.9rem;
            font-weight: 600;
            color: var(--tg-theme-text-color, #FFF);
            flex-grow: 1;
            min-width: 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            padding-right: 0.5rem;
        }

        .avatar-placeholder, .profile-avatar-large {
            position: relative;
            border-radius: 50%;
            color: var(--tg-theme-button-text-color, #FFF);
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 700;
            flex-shrink: 0;
            overflow: hidden;
            text-shadow: 0 0 2px rgba(0,0,0,0.5);
            transition: background-color 0.3s ease;
        }

           .avatar-placeholder {
            width: 1.75rem;
            height: 1.75rem;
            font-size: 0.8rem;
            margin-right: 0.5rem;
        }

        .profile-avatar-large {
            width: 4.5rem;
            height: 4.5rem;
            font-size: 2.2rem;
            margin: 0 auto 0.75rem auto;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
        }

        .avatar-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: inherit;
            position: absolute;
            top: 0;
            left: 0;
            z-index: 2;
            display: none;
        }

        .avatar-initials {
            position: relative;
            z-index: 3;
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
        }

        #user-username-loading {
            color: var(--tg-theme-hint-color, #888);
            animation: pulse 1.5s infinite;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }

        .balance-group {
            display: flex;
            align-items: center;
            flex-shrink: 0;
            gap: 0.75rem;
        }

        .balance-info {
            display: flex;
            align-items: center;
            font-size: 1rem;
            font-weight: 700;
            color: var(--tg-theme-text-color, #FFF);
            white-space: nowrap;
        }

        .balance-info .ton-icon {
            width: 1rem;
            height: 1rem;
            margin-right: 0.25rem;
        }

        .balance-actions {
            display: flex;
            gap: 0.3rem;
        }

        .mini-action-btn {
             background-color: rgba(255, 255, 255, 0.1);
             color: var(--tg-theme-text-color, #FFF);
             box-shadow: none;
             border: 1px solid rgba(255, 255, 255, 0.1);
             width: 2rem;
             height: 2rem;
             border-radius: 50%;
             font-size: 1.2rem;
             font-weight: 700;
             cursor: pointer;
             transition: background-color 0.2s, color 0.2s, transform 0.1s, box-shadow 0.2s;
             display: flex;
             align-items: center;
             justify-content: center;
             line-height: 1;
             -webkit-tap-highlight-color: transparent;
        }

        #shared-deposit-btn {
            color: #00e676;
            padding-bottom: 0.1rem;
        }
        #shared-deposit-btn:hover,
        #shared-deposit-btn:active {
            background-color: #00e676;
            color: #0d0d0d;
            box-shadow: 0 0 0.8rem rgba(0, 230, 118, 1);
            transform: scale(0.95);
        }

        #shared-withdraw-btn {
            color: #FF3B30;
        }
        #shared-withdraw-btn:hover,
        #shared-withdraw-btn:active {
            background-color: #FF3B30;
            color: #FFFFFF;
            box-shadow: 0 0 0.8rem rgba(255, 59, 48, 1);
            transform: scale(0.95);
        }

        /* ---- Иконки ---- */
         .ton-icon {
            width: 1.25rem;
            height: 1.25rem;
        }
        .small-icon {
            width: 1rem;
            height: 1rem;
            margin-right: 0.3125rem;
        }
        .large-icon {
            width: 1.5rem;
            height: 1.5rem;
            margin-right: 0.5rem;
        }

        /* ---- Секция "Profile" ---- */
        .balance-section {
            background-color: var(--tg-theme-secondary-bg-color, #1c1c1c);
            border-radius: 0.9375rem;
            padding: 1.25rem;
            margin-bottom: 1.25rem;
            box-sizing: border-box;
        }
        
        .player-info-card {
            background-color: var(--tg-theme-secondary-bg-color, #1a1a1a);
            border: 1px solid var(--tg-theme-border-color, #333);
            border-radius: 0.75rem;
            padding: 1.5rem 1rem;
            margin-bottom: 1.25rem;
            text-align: center;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
        }

        .profile-text-center {
            display: flex;
            flex-direction: column;
            gap: 0.3rem;
        }

        .info-label-centered {
            color: var(--tg-theme-hint-color, #bbb);
            font-size: 0.9375rem;
        }

        .info-value-centered {
            color: var(--tg-theme-text-color, #FFF);
            font-weight: 700;
            word-break: break-all;
            display: inline;
        }

        .main-ton-balance-display {
            text-align: center;
            margin: 1.875rem 0;
        }

        .action-buttons-group {
            display: flex;
            justify-content: space-between;
            gap: 0.625rem;
            margin-bottom: 1.25rem;
            flex-wrap: nowrap;
        }

        .action-button {
            flex-grow: 1;
            padding: 0.9375rem 0.625rem;
            border: none;
            border-radius: 0.75rem;
            color: var(--tg-theme-text-color, #FFF);
            font-size: 1rem;
            font-weight: 700;
            cursor: pointer;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            transition: all 0.2s ease;
            min-width: 30%;
        }
        .action-button img {
            width: 1.5rem;
            height: 1.5rem;
            margin-bottom: 0.3125rem;
            filter: invert(1);
        }

        .action-plus {
            font-size: 2rem;
            font-weight: 900;
            line-height: 1;
            margin-bottom: 0.3125rem;
            color: var(--tg-theme-text-color, #FFF);
        }

        .glass-button {
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(5px);
            -webkit-backdrop-filter: blur(5px);
            box-shadow: 0 0.25rem 0.375rem rgba(0, 0, 0, 0.2);
        }

        .glass-button:hover,
        .glass-button:focus {
            background: rgba(100, 100, 100, 0.15);
            border-color: rgba(255, 255, 255, 0.4);
            transform: translateY(-0.0625rem);
            outline: none;
        }

        .action-button.deposit-action:hover,
        .action-button.deposit-action:focus {
            background: rgba(0, 230, 118, 0.2);
            border-color: #00e676;
            box-shadow: 0 0 0.9375rem rgba(0, 230, 118, 0.6);
            transform: translateY(-0.125rem);
        }

        .action-button.withdraw-action:hover,
        .action-button.withdraw-action:focus {
            background: rgba(255, 59, 48, 0.2);
            border-color: #FF3B30;
            box-shadow: 0 0 0.9375rem rgba(255, 59, 48, 0.6);
            transform: translateY(-0.125rem);
        }

        .action-button.history-action:hover,
        .action-button.history-action:focus {
            background: rgba(43, 153, 243, 0.2);
            border-color: #2b99f3;
            box-shadow: 0 0 0.9375rem rgba(43, 153, 243, 0.6);
            transform: translateY(-0.125rem);
        }

        #connect-wallet-button {
            background-color: #2b99f3;
            color: var(--tg-theme-button-text-color, #FFF);
            border: none;
            border-radius: 0.75rem;
            padding: 0.9375rem 1.25rem;
            font-size: 1rem;
            font-weight: 700;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 100%;
            box-sizing: border-box;
            transition: background-color 0.2s, transform 0.1s;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
            -webkit-tap-highlight-color: transparent;
        }
        #connect-wallet-button:hover {
            filter: brightness(1.1);
            transform: translateY(-1px);
        }
        #connect-wallet-button:active {
            transform: translateY(0);
        }
        #connect-wallet-button img {
            width: 1.25rem;
            height: 1.25rem;
            margin-right: 0.5rem;
        }
        
        #wallet-address-display {
            font-size: 0.75rem;
            color: var(--tg-theme-hint-color, #bbb);
            margin-top: 0.625rem;
            display: none;
            text-align: center;
        }

        .inventory-section {
            background-color: var(--tg-theme-secondary-bg-color, #1c1c1c);
            border-radius: 0.9375rem;
            padding: 1.25rem;
            margin-bottom: 1.25rem;
            box-sizing: border-box;
        }
        .inventory-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 0.9375rem;
            font-size: 1.125rem;
            color: var(--tg-theme-text-color, #FFF);
            flex-wrap: wrap;
            gap: 0.5rem;
        }
        .inventory-value {
            display: flex;
            align-items: center;
            font-size: 1rem;
            color: var(--tg-theme-text-color, #FFF);
            white-space: nowrap;
        }
        .inventory-value img {
            width: 1.125rem;
            height: 1.125rem;
            margin: 0 0.3125rem;
        }
        .no-gifts-message {
            font-size: 0.875rem;
            color: var(--tg-theme-hint-color, #888);
            text-align: center;
            line-height: 1.5;
            padding: 0.625rem;
        }
        .no-gifts-message a {
            color: var(--tg-theme-link-color, #2b99f3);
            text-decoration: none;
        }
        
        /* ---- Секция "Invite" ---- */
        .invite-card {
            background-color: var(--tg-theme-secondary-bg-color, #1a1a1a);
            border-radius: 0.9375rem;
            padding: 1.25rem;
            margin-bottom: 1.25rem;
            text-align: center;
            box-sizing: border-box;
        }
        .invite-card h2 {
            margin-top: 0;
            font-size: 1.375rem;
            color: var(--tg-theme-text-color, #FFF);
            margin-bottom: 0.625rem;
        }
        .invite-card p {
            font-size: 0.9375rem;
            color: var(--tg-theme-hint-color, #bbb);
            margin-bottom: 0.9375rem;
            line-height: 1.4;
        }
        .invite-link-box {
            background-color: var(--tg-theme-bg-color, #0d0d0d);
            border: 1px solid var(--tg-theme-border-color, #333);
            border-radius: 0.625rem;
            padding: 0.75rem;
            margin-bottom: 0.9375rem;
            display: flex;
            align-items: center;
            justify-content: space-between;
            font-size: 1rem;
            color: var(--tg-theme-text-color, #FFF);
            word-break: break-all;
            flex-wrap: wrap;
        }
        .invite-link-box span {
            flex-grow: 1;
            min-width: 0;
            margin-right: 0.5rem;
        }
        .copy-button {
            background-color: var(--tg-theme-button-color, #007AFF);
            color: var(--tg-theme-button-text-color, #FFF);
            border: none;
            border-radius: 0.5rem;
            padding: 0.5rem 0.9375rem;
            font-size: 0.875rem;
            cursor: pointer;
            transition: background-color 0.2s ease;
            margin-left: auto;
            flex-shrink: 0;
            -webkit-tap-highlight-color: transparent;
        }
        .referral-stats {
            display: flex;
            justify-content: space-around;
            margin-top: 1.25rem;
            background-color: var(--tg-theme-secondary-bg-color, #1a1a1a);
            border-radius: 0.9375rem;
            padding: 0.9375rem 0.625rem;
            flex-wrap: wrap;
            gap: 1rem;
        }
        .stat-item {
            text-align: center;
            flex-grow: 1;
            min-width: 100px;
        }
        .stat-item h3 {
            margin: 0;
            font-size: 1.5rem;
            color: var(--tg-theme-link-color, #00e676);
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 700;
        }
        .stat-item p {
            margin: 0.3125rem 0 0;
            font-size: 0.8125rem;
            color: var(--tg-theme-hint-color, #888);
        }
        .referral-list-header {
            font-size: 1.125rem;
            color: var(--tg-theme-text-color, #FFF);
            margin-top: 1.875rem;
            margin-bottom: 0.9375rem;
            text-align: center;
        }
        .referral-item {
            background-color: var(--tg-theme-secondary-bg-color, #1a1a1a);
            border-radius: 0.625rem;
            padding: 0.625rem 0.9375rem;
            margin-bottom: 0.625rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 0.9375rem;
            flex-wrap: wrap;
            gap: 0.5rem;
        }
        .referral-item span {
            color: var(--tg-theme-text-color, #FFF);
            flex-grow: 1;
            min-width: 100px;
        }
        .referral-item small {
            color: var(--tg-theme-hint-color, #888);
        }
        .referral-item .reward {
            color: var(--tg-theme-link-color, #00e676);
            font-weight: 700;
            display: flex;
            align-items: center;
            flex-shrink: 0;
        }

        /* ----- Нижнее меню ----- */
        .bottom-menu-container {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            display: flex;
            justify-content: space-around;
            align-items: flex-start;
            background-color: var(--tg-theme-secondary-bg-color, #1a1a1a);
            padding: 0.3rem 0;
            box-shadow: 0 -0.125rem 0.625rem rgba(0, 0, 0, 0.5);
            z-index: 1000;
            height: 4.5rem;
            border-top-left-radius: 0.9375rem;
            border-top-right-radius: 0.9375rem;
            box-sizing: border-box;
            max-width: 100vw;
        }

        .menu-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            color: var(--tg-theme-hint-color, #888);
            font-size: 0.9rem;
            text-decoration: none;
            cursor: pointer;
            padding: 0.3rem 0.1rem;
            flex-grow: 1;
            user-select: none;
            transition: color 0.2s ease;
            -webkit-tap-highlight-color: transparent;
            height: 100%;
        }
        .menu-item img {
            width: 2rem;
            height: 2rem;
            margin-bottom: 0.1rem;
            filter: invert(0.6);
            transition: filter 0.2s ease, transform 0.2s ease;
        }
        .menu-item.active { 
            color: #2b99f3;
        }
        .menu-item.active img {
            filter: none;
            transform: scale(1.1);
        }
        
        .menu-item-circle {
            flex-grow: 0;
            flex-shrink: 0;
            width: 4rem;
            height: 55px;
            position: relative;
            display: flex;
            align-items: flex-end;
            justify-content: center;
            z-index: 1001;
        }
        
        .bottom-menu-container .deposit-button {
            background-color: var(--tg-theme-button-color, #00e676);
            border-radius: 50%;
            width: 3rem; 
            height: 3rem;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            color: var(--tg-theme-button-text-color, #FFF);
            font-weight: 700;
            box-shadow: 0 0 0.9375rem rgba(0, 230, 118, 0.7);
            position: absolute;
            bottom: 1rem;
            z-index: 10;
            transition: all 0.2s ease;
            cursor: pointer;
            line-height: 1;
            -webkit-tap-highlight-color: transparent;
        }
        
        .bottom-menu-container .deposit-button .deposit-plus-sign {
            font-size: 1.5rem;
            font-weight: 900;
            line-height: 1;
            margin-bottom: 0.1rem;
            color: var(--tg-theme-button-text-color, #FFF);
        }

        .bottom-menu-container .deposit-button span {
            font-size: 0.6rem;
            font-weight: 700;
            display: block;
        }
        
        .deposit-button:hover,
        .deposit-button:active {
            box-shadow: 0 0 1.5rem rgba(0, 255, 130, 1.2), 0 0 0.6rem rgba(0, 255, 130, 1.0);
            transform: scale(1.03);
        }
        
        /* Скрываем подпись "Deposit" под кнопкой */
        .menu-item-circle > span {
            display: none;
        }

        /* ----- Стили для игр ----- */
        .game-view-container, .game-submenu, .games-category {
            width: 100%;
            display: none; /* Управляется JS */
        }
        .active-sub-view {
            display: flex !important;
            flex-direction: column;
            gap: 1rem;
        }
        .game-view-container.active-sub-view {
            display: block !important;
        }

        .back-button {
             background-color: var(--tg-theme-secondary-bg-color, #1c1c1c);
             color: var(--tg-theme-link-color, #2b99f3);
             border: 1px solid var(--tg-theme-secondary-bg-color, #1c1c1c);
             border-radius: 0.5rem;
             padding: 0.5rem 1rem;
             font-size: 0.9rem;
             font-weight: 600;
             cursor: pointer;
             transition: background-color 0.2s, border-color 0.2s;
             margin-bottom: 1rem;
             display: inline-flex;
             align-items: center;
             -webkit-tap-highlight-color: transparent;
        }
        .back-button:hover {
             border-color: var(--tg-theme-link-color, #2b99f3);
        }
        
        .category-card { 
            border-radius:1rem; 
            padding:1.2rem; 
            color:#fff; 
            font-weight:700;
            cursor:pointer; 
            box-shadow:0 4px 12px rgba(0,0,0,0.4); 
            transition:transform .18s; 
        }
        .category-card h2 { margin:0; font-size:1.25rem; }
        .category-card p { margin:0.2rem 0 0; font-weight:400; font-size:0.95rem; opacity:0.95; }
        .pvp-card { background: linear-gradient(135deg,#2b99f3,#0051a8); }
        .solo-card { background: linear-gradient(135deg,#00e676,#009f4d); }
        .lottery-card { background: linear-gradient(135deg,#ff3b30,#b71c1c); }

        /* ----- Tic-Tac-Toe ----- */
        .tic-tac-toe-game {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 1.5rem;
            max-width: 300px;
            margin: 0.5rem auto 0 auto;
        }

        .board {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            grid-gap: 0.5rem;
            width: 100%;
            aspect-ratio: 1 / 1;
            background-color: var(--tg-theme-secondary-bg-color, #1c1c1c);
            padding: 0.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.4);
        }

        .cell {
            background-color: var(--tg-theme-bg-color, #0d0d0d);
            border-radius: 0.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 3rem;
            font-weight: 900;
            color: var(--tg-theme-text-color, #FFF);
            cursor: pointer;
            user-select: none;
            transition: background-color 0.1s ease;
            line-height: 1;
        }
        .cell:hover {
            background-color: var(--tg-theme-secondary-bg-color, #282828);
        }
        .cell.x-mark { color: var(--tg-theme-link-color, #2b99f3); }
        .cell.o-mark { color: var(--tg-theme-destructive-text-color, #FF3B30); }

        .game-status {
            font-size: 1.25rem;
            font-weight: 700;
            text-align: center;
        }

        .new-game-button {
             background-color: var(--tg-theme-button-color, #007AFF);
             color: var(--tg-theme-button-text-color, #FFF);
             border: none;
             border-radius: 0.75rem;
             padding: 0.75rem 1.5rem;
             font-size: 1rem;
             font-weight: 700;
             cursor: pointer;
             transition: background-color 0.2s, transform 0.1s;
             box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
             -webkit-tap-highlight-color: transparent;
        }
        .new-game-button:active {
            transform: scale(0.98);
        }
        
        /* ---- Lottery Styles ---- */
        #lottery-roulette-container { 
            position:relative; 
            height:120px; 
            overflow:hidden; 
            margin:1rem auto; 
            border-radius:10px; 
            background:#111; 
            border:2px solid #333; 
            max-width:900px; 
        }
        #lottery-roulette-strip { 
            display:flex;
            align-items:center; 
            transition:transform .1s linear; 
            padding:12px 24px; 
        }
        #lottery-roulette-container .indicator { 
            position:absolute; 
            top:0; 
            bottom:0; 
            left:50%; 
            width:4px; 
            background:rgba(255,255,255,0.9); 
            transform:translateX(-50%); 
            box-shadow:0 0 8px rgba(255,255,255,0.06);
        }
        #lottery-slots { 
            display:grid; 
            grid-template-columns:repeat(auto-fill, minmax(60px, 1fr)); 
            gap:8px; 
            margin:1rem 0; 
        }
        #lottery-slots div { 
            height:64px; 
            border-radius:8px; 
            display:flex; 
            align-items:center; 
            justify-content:center; 
            background:#111; 
            border:1px solid #333; 
            cursor:pointer;
            overflow: hidden;
        }
        #lottery-slots div img { 
            width:100%; 
            height:100%; 
            object-fit:cover; 
            border-radius:8px; 
        }
    </style>
</head>
<body>
    <div id="loading-overlay">
        <div class="loader"></div>
        <p id="loading-hint-text">Инициализация приложения...</p>
        <p id="loading-status-text"></p>
    </div>

    <div id="custom-notification"></div>

    <div id="app-content-wrapper">
       
         <div class="shared-balance-component" id="shared-ton-balance-display">
            <div class="user-info">
                <div id="user-avatar" class="avatar-placeholder">
                    <img id="header-avatar-img" class="avatar-image" alt="Аватар">
                    <span id="header-avatar-initials" class="avatar-initials">?</span>
                </div>
                <span id="user-username-loading">Загрузка имени...</span>
                <span id="user-username" style="display: none;"></span>
            </div>
            <div class="balance-group">
                <div class="balance-info">
                     <img src="https://raw.githubusercontent.com/MICHIAP/tonconnect-manifest.json/Images/IMG_1634.png" alt="TON Icon" class="ton-icon">
                    <span id="shared-ton-value">0.00</span>&nbsp;TON
                </div>
                <div class="balance-actions">
                    <button id="shared-deposit-btn" class="mini-action-btn" title="Депозит">+</button>
                    <button id="shared-withdraw-btn" class="mini-action-btn" title="Вывод">-</button>
                </div>
            </div>
        </div>

        <div class="content-section" id="games-section">

            <h1 id="games-section-title" style="text-align: center; margin-bottom: 1.5rem;">
                Игровой центр LUDO
            </h1>

            <div id="games-category" class="games-category active-sub-view">
                <div class="category-card pvp-card" id="open-pvp">
                    <h2>PVP</h2>
                    <p>Играй против других игроков за TON</p>
                </div>
                <div class="category-card solo-card" id="open-solo">
                    <h2>SOLO</h2>
                    <p>Игра для одного игрока, тестируй удачу</p>
                </div>
                <div class="category-card lottery-card" id="open-lottery">
                    <h2>Bulba Lottery</h2>
                    <p>Покупай билеты и выигрывай TON</p>
                </div>
            </div>

            <div id="pvp-submenu" class="game-submenu">
                <button class="back-button back-to-main">← Назад</button>
                <div class="category-card" id="open-tictactoe">
                    <h2>Крестики-нолики</h2>
                    <p>Классическая игра для двух игроков</p>
                </div>
                <div class="category-card" id="open-rps">
                    <h2>Камень-Ножницы-Бумага</h2>
                    <p>Быстрая PvP игра на удачу</p>
                </div>
                <div class="category-card" id="open-dice">
                    <h2>Кубики</h2>
                    <p>Брось кости и побеждай</p>
                </div>
            </div>

            <div id="solo-submenu" class="game-submenu">
                <button class="back-button back-to-main">← Назад</button>
                <div class="category-card" id="open-wheel"><h2>Колесо</h2><p>Испытай удачу, вращая колесо</p></div>
                <div class="category-card" id="open-cases"><h2>Кейсы</h2><p>Открывай кейсы и получай призы</p></div>
            </div>

            <div id="lottery-submenu" class="game-submenu">
                <button class="back-button back-to-main">← Назад</button>
                <div class="category-card" id="open-lottery-10"><h2>10 TON Lottery</h2><p>Бюджетная лотерея</p></div>
                <div class="category-card" id="open-lottery-100"><h2>100 TON Lottery</h2><p>Средний уровень ставок</p></div>
                <div class="category-card" id="open-lottery-1000"><h2>1000 TON Lottery</h2><p>Крупная игра для смельчаков</p></div>
            </div>

            <div id="game-view-tictactoe" class="game-view-container">
                <button class="back-button back-to-pvp">← Вернуться к PVP</button>
                <div class="tic-tac-toe-game">
                    <div id="game-status" class="game-status">Ход: X</div>
                    <div class="board">
                        <div class="cell" data-index="0"></div>
                        <div class="cell" data-index="1"></div>
                        <div class="cell" data-index="2"></div>
                        <div class="cell" data-index="3"></div>
                        <div class="cell" data-index="4"></div>
                        <div class="cell" data-index="5"></div>
                        <div class="cell" data-index="6"></div>
                        <div class="cell" data-index="7"></div>
                        <div class="cell" data-index="8"></div>
                    </div>
                    <button id="new-game-button" class="new-game-button">Начать новую игру</button>
                </div>
            </div>

            <div id="game-view-rps" class="game-view-container">
                <button class="back-button back-to-pvp">← Назад в PVP</button>
                <p style="text-align:center; margin-top:2rem;">⚡ Камень-Ножницы-Бумага скоро здесь!</p>
            </div>

            <div id="game-view-dice" class="game-view-container">
                <button class="back-button back-to-pvp">← Назад в PVP</button>
                <p style="text-align:center; margin-top:2rem;">🎲 Кубики скоро здесь!</p>
            </div>

            <div id="lottery-game-view" class="game-view-container">
                <button class="back-button back-to-lottery">← Назад в Lottery</button>
                <h2 id="lottery-title" style="text-align:center; margin-bottom:1rem;"></h2>
                <div id="lottery-roulette-container">
                    <div id="lottery-roulette-strip"></div>
                    <div class="indicator"></div>
                </div>
                <div id="lottery-slots"></div>
                <p id="lottery-status" style="text-align:center; color:gray; margin-top:1rem;">Выберите место для участия</p>
            </div>
        </div>

        <div class="content-section" id="profile-section">
            <div class="balance-section">
                <div class="player-info-card">
                    <div id="profile-avatar-large" class="profile-avatar-large">
                        <img id="profile-avatar-img" class="avatar-image" alt="Аватар профиля">
                        <span id="profile-avatar-initials" class="avatar-initials">?</span>
                    </div>
                    <div class="profile-text-center">
                        <span class="info-label-centered" id="player-id-display">Загрузка...</span>
                        <strong id="player-tg-display" class="info-value-centered">Нет данных TG</strong>
                    </div>
                </div>
                <div class="main-ton-balance-display">
                    <p style="font-size: 1rem; color: var(--tg-theme-hint-color, #888); margin-bottom: 0.5rem;">Ваш текущий баланс</p>
                    <div style="display: flex; align-items: center; justify-content: center; font-size: 2.5rem; font-weight: bold;">
                        <img src="https://raw.githubusercontent.com/MICHIAP/tonconnect-manifest.json/Images/IMG_1634.png" alt="TON Icon" class="large-icon">
                        <span id="player-summary-ton">0.00</span> <span style="font-size: 1.25rem; margin-left: 0.5rem; color: var(--tg-theme-hint-color, #888);">TON</span>
                    </div>
                </div>
                <div class="action-buttons-group">
                    <button class="action-button glass-button deposit-action" id="action-deposit">
                        <span class="action-plus">+</span>
                        <span>Депозит</span>
                    </button>
                    <button class="action-button glass-button withdraw-action" id="action-withdraw">
                        <img src="https://placehold.co/24/FFFFFF/FF3B30?text=⬆" alt="Вывести">
                        <span>Вывести</span>
                    </button>
                    <button class="action-button glass-button history-action" id="action-history">
                        <img src="https://placehold.co/24/FFFFFF/2b99f3?text=⇅" alt="История">
                        <span>История</span>
                    </button>
                </div>
                <button id="connect-wallet-button">
                    <img src="https://raw.githubusercontent.com/MICHIAP/tonconnect-manifest.json/Images/IMG_1634.png" alt="TON Icon"> Подключить TON кошелек
                </button>
                <p id="wallet-address-display"></p>
            </div>
            <div class="inventory-section">
                <div class="inventory-header">
                    Inventory (NFTs/Gifts)
                    <div class="inventory-value">
                        <span id="inventory-ton-items">0</span> NFT = <span id="inventory-ton-value">0.00</span> TON
                    </div>
                </div>
                <p class="no-gifts-message">
                    В инвентаре пока нет подарков. Отправьте подарок нашему боту <a href="https://t.me/your_bot_link" target="_blank">@myluckvdrop</a>, чтобы начать.
                </p>
            </div>
        </div>

        <div class="content-section" id="top-section">
            <p style="text-align: center; font-size: 1.5rem; color: var(--tg-theme-hint-color, #aaa); padding-top: 5rem;">
                Рейтинги<br>
                <small style="font-size: 0.8em; display: block; margin-top: 10px;">Топ игроков по выигрышам/ставкам.</small>
            </p>
        </div>

        <div class="content-section" id="invite-section">
            <div class="invite-card">
                <h2>Пригласи друзей и получи TON!</h2>
                <p>Приглашайте новых пользователей по вашей уникальной ссылке и получайте процент от их депозитов.</p>
                <div class="invite-link-box">
                    <span id="referral-link">https://t.me/ludobulba_bot?start=ref_12345</span>
                    <button class="copy-button" id="copy-referral-link">Копировать</button>
                </div>
                 <p style="font-size: 0.8125rem; color: var(--tg-theme-link-color, #00e676); margin-top: -0.625rem;">
                    Вы получите <span style="font-weight: bold;">10%</span> от всех депозитов ваших рефералов.
                </p>
            </div>
            <div class="referral-stats">
                <div class="stat-item">
                    <h3><span id="total-referrals">0</span></h3>
                    <p>Всего рефералов</p>
                </div>
                <div class="stat-item">
                    <h3><img src="https://raw.githubusercontent.com/MICHIAP/tonconnect-manifest.json/Images/IMG_1634.png" alt="TON Icon" class="ton-icon small-icon"> <span id="total-referral-ton">0.00</span></h3>
                    <p>Заработано TON</p>
                </div>
            </div>
            <h3 class="referral-list-header">Ваши рефералы</h3>
            <div id="referral-list"></div>
        </div>

        <div class="bottom-menu-container">
            <div class="menu-item" id="menu-games">
                <img src="https://raw.githubusercontent.com/MICHIAP/tonconnect-manifest.json/Images/00FEAD71-16A4-4A5B-803B-69AAF6EFF47D.png" alt="Игры">
                <span>Games</span>
            </div>
            <div class="menu-item" id="menu-top">
                <img src="https://raw.githubusercontent.com/MICHIAP/tonconnect-manifest.json/Images/0CB7E2FF-690F-43A7-9D28-574B423027E3.png" alt="Топ">
                <span>Top</span>
            </div>
            <div class="menu-item menu-item-circle" id="menu-deposit">
                <div class="deposit-button" title="Депозит">
                    <span class="deposit-plus-sign">+</span>
                    <span>DEPOSIT</span>
                </div>
                <span>Deposit</span>
            </div>
            <div class="menu-item" id="menu-invite">
                <img src="https://raw.githubusercontent.com/MICHIAP/tonconnect-manifest.json/Images/251E49E3-7821-466B-853D-12C12872E84E.png" alt="Пригласить">
                <span>Invite</span>
            </div>
            <div class="menu-item" id="menu-profile">
                <img src="https://raw.githubusercontent.com/MICHIAP/tonconnect-manifest.json/main/DA7CB43F-9623-4E18-B576-F0232A7DA084.png" alt="Профиль">
                <span>Profile</span>
            </div>
        </div>
    </div>

    <script type="module">
        // --- Глобальные переменные ---
        const USER_ID_KEY = 'ludoBulbaUserId';
        const BALANCE_KEY = 'ludoBulbaTonBalance';
        let userId = null;
        let walletAddress = null;
        let currentTonBalance = 0.00;

        let connector;
        const manifestUrl = 'https://raw.githubusercontent.com/MICHIAP/tonconnect-manifest.json/main/tonconnect-manifest.json';
        const TON_DEPOSIT_ADDRESS = "UQAH1u89n-b4w9L16y-q_4m69J9Xz3r-G2s4J8T7B"; // Замените на ваш адрес

        // --- Функция для отображения критической ошибки ---
        function showCriticalError(message) {
            const overlay = document.getElementById('loading-overlay');
            const loader = overlay.querySelector('.loader');
            const statusText = document.getElementById('loading-status-text');

            if (loader) loader.style.display = 'none';
            overlay.style.backgroundColor = 'var(--tg-theme-destructive-text-color, #FF3B30)';
            overlay.querySelector('#loading-hint-text').style.display = 'none';

            statusText.textContent = message;
            statusText.style.fontWeight = 'bold';
            statusText.style.fontSize = '1.1rem';
            statusText.style.display = 'block';
        }
        
        // --- Уведомления ---
        const showNotification = (message) => {
            if (window.Telegram?.WebApp?.showAlert) {
                try {
                    window.Telegram.WebApp.showAlert(message);
                    return;
                } catch (e) {
                    console.error("TWA showAlert failed, falling back to custom notification:", e);
                }
            }
            const notificationBox = document.getElementById('custom-notification');
            if (notificationBox) {
                notificationBox.textContent = message;
                notificationBox.classList.add('show');
                setTimeout(() => notificationBox.classList.remove('show'), 3000);
            }
        };

        // --- ЛОГИКА LOCAL STORAGE ---
        function saveBalanceToLocalStorage(newBalance) {
            currentTonBalance = newBalance;
            localStorage.setItem(BALANCE_KEY, newBalance.toFixed(2));
            updateBalanceUI();
        }

        function loadDataFromLocalStorage() {
            const twaUser = window.Telegram?.WebApp?.initDataUnsafe?.user || null;
            let twaUserId = twaUser ? String(twaUser.id) : null;
            let storedUserId = localStorage.getItem(USER_ID_KEY);
            
            if (twaUserId) {
                if (!storedUserId || storedUserId.length > 20) {
                    storedUserId = twaUserId;
                    localStorage.setItem(USER_ID_KEY, storedUserId);
                }
            } else {
                if (!storedUserId) {
                    storedUserId = crypto.randomUUID();
                    localStorage.setItem(USER_ID_KEY, storedUserId);
                }
            }
            userId = storedUserId;
            const storedBalance = localStorage.getItem(BALANCE_KEY);
            currentTonBalance = storedBalance ? parseFloat(storedBalance) : 0.00;

            updateBalanceUI();
            initializeProfileUI(userId);
        }

        // --- Обновление UI ---
        function updateBalanceUI() {
            const formattedBalance = currentTonBalance.toFixed(2);
            document.getElementById('shared-ton-value').textContent = formattedBalance;
            document.getElementById('player-summary-ton').textContent = formattedBalance;
        }

        function getInitialsAndColor(name) {
            if (!name) return { initials: '?', color: '#555555' };
            const nameToHash = name.length > 20 ? name.substring(0, 12) : name;
            const parts = name.split(' ').filter(p => p.length > 0);
            const initials = (parts.length > 1) ? (parts[0][0] + parts[parts.length - 1][0]).toUpperCase() : name[0].toUpperCase();
            
            let hash = 0;
            for (let i = 0; i < nameToHash.length; i++) {
                hash = nameToHash.charCodeAt(i) + ((hash << 5) - hash);
            }
            let color = '#';
            for (let i = 0; i < 3; i++) {
                const value = ((hash >> (i * 8)) & 0xFF) | 0x80;
                color += ('00' + value.toString(16)).substr(-2);
            }
            return { initials, color };
        }
        
        function initializeProfileUI(id) {
            if (!id) {
                document.getElementById('user-username-loading').textContent = 'Ошибка ID';
                return;
            }

            const twaUser = window.Telegram?.WebApp?.initDataUnsafe?.user || null;
            let headerUsername, profileTgDisplay, nameSource, photoUrl = null;
            const isTwaId = twaUser && String(twaUser.id) === id;

            if (twaUser) {
                if (twaUser.username) {
                    headerUsername = `@${twaUser.username}`;
                    profileTgDisplay = `@${twaUser.username}`;
                    nameSource = twaUser.username;
                } else if (twaUser.first_name) {
                    headerUsername = twaUser.first_name;
                    profileTgDisplay = `${twaUser.first_name} ${twaUser.last_name || ''}`.trim();
                    nameSource = twaUser.first_name;
                } else {
                    headerUsername = 'Пользователь TG';
                    profileTgDisplay = `Telegram ID: ${twaUser.id}`;
                    nameSource = String(twaUser.id);
                }
                photoUrl = twaUser.photo_url || null;
            } else {
                headerUsername = 'Анонимный игрок';
                profileTgDisplay = `Local ID: ${id.substring(0, 12)}...`;
                nameSource = id;
            }

            const { initials, color } = getInitialsAndColor(nameSource);

            document.getElementById('user-username-loading').style.display = 'none';
            const usernameSpan = document.getElementById('user-username');
            usernameSpan.textContent = headerUsername;
            usernameSpan.style.display = 'inline';

            const avatarElements = [
                { img: 'header-avatar-img', initials: 'header-avatar-initials', container: 'user-avatar' },
                { img: 'profile-avatar-img', initials: 'profile-avatar-initials', container: 'profile-avatar-large' }
            ];

            avatarElements.forEach(els => {
                const imgEl = document.getElementById(els.img);
                const initialsEl = document.getElementById(els.initials);
                const containerEl = document.getElementById(els.container);
                if (photoUrl) {
                    imgEl.src = photoUrl;
                    imgEl.style.display = 'block';
                    initialsEl.style.display = 'none';
                    containerEl.style.backgroundColor = 'transparent';
                } else {
                    imgEl.style.display = 'none';
                    initialsEl.textContent = initials;
                    initialsEl.style.display = 'flex';
                    containerEl.style.backgroundColor = color;
                }
            });

            document.getElementById('player-id-display').textContent = `${isTwaId ? 'Telegram ID' : 'Local ID'}: ${id}`;
            document.getElementById('player-tg-display').textContent = profileTgDisplay;
            document.getElementById('referral-link').textContent = `https://t.me/ludobulba_bot?start=ref_${id.substring(0, 8)}`;
        }

        // --- Навигация ---
        const sections = {
            'menu-games': 'games-section',
            'menu-top': 'top-section',
            'menu-invite': 'invite-section',
            'menu-profile': 'profile-section',
            'menu-deposit': 'profile-section'
        };

        function setActiveSection(menuItemId) {
            const sectionId = sections[menuItemId];
            if (!sectionId) return;

            document.querySelectorAll('.bottom-menu-container .menu-item').forEach(item => item.classList.remove('active'));
            
            const activeMenuId = (menuItemId === 'menu-deposit') ? 'menu-games' : menuItemId;
            document.getElementById(activeMenuId)?.classList.add('active');

            document.querySelectorAll('.content-section').forEach(section => section.classList.remove('active'));
            
            const targetSectionId = (menuItemId === 'menu-deposit') ? 'games-section' : sectionId;
            document.getElementById(targetSectionId)?.classList.add('active');

            const sharedBalance = document.getElementById('shared-ton-balance-display');
            sharedBalance.style.display = ['games-section', 'profile-section'].includes(targetSectionId) ? 'flex' : 'none';
        }

        // --- TON Connect ---
        function updateWalletUI(address) {
            const button = document.getElementById('connect-wallet-button');
            const addressDisplay = document.getElementById('wallet-address-display');
            if (address) {
                walletAddress = address;
                button.innerHTML = 'Отключить кошелек';
                button.style.backgroundColor = 'var(--tg-theme-destructive-text-color, #FF3B30)';
                const shortAddress = `${address.substring(0, 8)}...${address.substring(address.length - 4)}`;
                addressDisplay.textContent = `Подключен: ${shortAddress}`;
                addressDisplay.style.display = 'block';
            } else {
                walletAddress = null;
                button.innerHTML = '<img src="https://raw.githubusercontent.com/MICHIAP/tonconnect-manifest.json/Images/IMG_1634.png" alt="TON Icon"> Подключить TON кошелек';
                button.style.backgroundColor = '#2b99f3';
                addressDisplay.style.display = 'none';
            }
        }

        async function connectWallet() {
            if (!connector) return;
            try {
                const walletsList = await connector.getWallets();
                const deepLink = connector.connect(walletsList[0]); // Пример: подключаем первый доступный кошелек
                window.Telegram.WebApp.openTelegramLink(deepLink);
                showNotification('Открываю кошелек для подключения...');
            } catch (e) {
                console.error('Connection failed:', e);
                showNotification('Ошибка подключения кошелька.');
            }
        }

        async function disconnectWallet() {
            try {
                 await connector.disconnect();
                 updateWalletUI(null);
                 showNotification('Кошелек отключен.');
            } catch (e) {
                console.error('Disconnection failed:', e);
                showNotification('Ошибка при отключении кошелька.');
            }
        }

        async function sendTonTransaction() {
            if (!walletAddress) {
                showNotification('Пожалуйста, сначала подключите кошелек TON.');
                window.Telegram?.WebApp?.HapticFeedback?.notificationOccurred('error');
                return;
            }
            
            const displayAmount = 0.01; // Пример
            const transaction = {
                messages: [{
                    address: TON_DEPOSIT_ADDRESS,
                    amount: (displayAmount * 1e9).toString(),
                }],
                validUntil: Date.now() + 5 * 60 * 1000,
            };

            try {
                window.Telegram?.WebApp?.HapticFeedback?.impactOccurred('medium');
                showNotification(`Отправка ${displayAmount.toFixed(2)} TON. Проверьте ваш кошелек.`);
                await connector.sendTransaction(transaction);
                saveBalanceToLocalStorage(currentTonBalance + displayAmount); // Симуляция
            } catch (e) {
                console.error("TON Transaction Failed:", e);
                showNotification('Транзакция отменена или отклонена.');
                window.Telegram?.WebApp?.HapticFeedback?.notificationOccurred('error');
            }
        }

        // --- Инициализация приложения ---
        async function initializeApp() {
            try {
                loadDataFromLocalStorage();
                setActiveSection('menu-games');

                connector = new window.TonConnectSDK.TonConnect({ manifestUrl });
                connector.onStatusChange(wallet => updateWalletUI(wallet?.account.address || null));
                
                document.getElementById('loading-overlay').style.opacity = '0';
                setTimeout(() => {
                     document.getElementById('loading-overlay').style.display = 'none';
                     document.getElementById('app-content-wrapper').style.display = 'flex';
                     window.Telegram?.WebApp?.expand();
                }, 300);
            } catch (error) {
                console.error("КРИТИЧЕСКАЯ ОШИБКА:", error);
                showCriticalError("Ошибка инициализации: " + error.message);
            }
        }
        
        // --- Логика игры "Крестики-нолики" ---
        let gameBoard = Array(9).fill('');
        let currentPlayer = 'X';
        let gameActive = true;
        const gameStatusEl = document.getElementById('game-status');
        const cells = document.querySelectorAll('.board .cell');
        const winningConditions = [
            [0, 1, 2], [3, 4, 5], [6, 7, 8],
            [0, 3, 6], [1, 4, 7], [2, 5, 8],
            [0, 4, 8], [2, 4, 6]
        ];

        function handleResultValidation() {
            let roundWon = false;
            for (const condition of winningConditions) {
                const [a, b, c] = condition.map(i => gameBoard[i]);
                if (a && a === b && a === c) {
                    roundWon = true;
                    break;
                }
            }

            if (roundWon) {
                gameStatusEl.innerHTML = `Победитель: ${currentPlayer}!`;
                gameActive = false;
                window.Telegram?.WebApp?.HapticFeedback?.notificationOccurred('success');
                return;
            }

            if (!gameBoard.includes('')) {
                gameStatusEl.textContent = 'Ничья!';
                gameActive = false;
                window.Telegram?.WebApp?.HapticFeedback?.notificationOccurred('warning');
                return;
            }
            
            currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
            gameStatusEl.textContent = `Ход: ${currentPlayer}`;
        }
        
        function handleCellClick(e) {
            const index = parseInt(e.target.dataset.index);
            if (gameBoard[index] !== '' || !gameActive) return;
            
            gameBoard[index] = currentPlayer;
            e.target.textContent = currentPlayer;
            e.target.classList.add(currentPlayer === 'X' ? 'x-mark' : 'o-mark');
            window.Telegram?.WebApp?.HapticFeedback?.impactOccurred('light');
            handleResultValidation();
        }

        function handleRestartGame() {
            gameActive = true;
            currentPlayer = 'X';
            gameBoard.fill('');
            gameStatusEl.textContent = 'Ход: X';
            cells.forEach(cell => {
                cell.textContent = '';
                cell.classList.remove('x-mark', 'o-mark');
            });
            window.Telegram?.WebApp?.HapticFeedback?.impactOccurred('medium');
        }
        
        // --- Логика лотереи ---
        const lotteryConfigs = {
            "10": { price: 10, slots: 20 },
            "100": { price: 100, slots: 30 },
            "1000": { price: 1000, slots: 50 }
        };
        let currentLottery = null;
        let slotsTaken = [];

        function openLottery(type) {
            const config = lotteryConfigs[type];
            currentLottery = type;
            slotsTaken = new Array(config.slots).fill(null);
            document.getElementById('lottery-title').textContent = `${config.price} TON Lottery`;
            renderLotterySlots();
            document.getElementById('lottery-submenu').classList.remove('active-sub-view');
            document.getElementById('lottery-game-view').classList.add('active-sub-view');
        }

        function renderLotterySlots() {
            const slotsContainer = document.getElementById('lottery-slots');
            slotsContainer.innerHTML = '';
            slotsTaken.forEach((owner, index) => {
                const slot = document.createElement('div');
                if (owner) {
                    if (owner.avatar) {
                        slot.innerHTML = `<img src="${owner.avatar}" alt="avatar">`;
                    } else {
                        slot.textContent = owner.name?.[0] || '👤';
                    }
                    slot.style.background = '#2b99f3';
                    slot.style.cursor = 'default';
                } else {
                    slot.textContent = index + 1;
                    slot.addEventListener('click', () => buySlot(index));
                }
                slotsContainer.appendChild(slot);
            });
        }
        
        function getTgUser() {
             try { return window.Telegram.WebApp.initDataUnsafe.user || null; } 
             catch (e) { return null; }
        }

        function buySlot(index) {
            if (slotsTaken[index]) return;
            const player = getTgUser() || { id: `local_${Math.random()}`, first_name: 'Player', photo_url: null };
            slotsTaken[index] = { id: player.id, name: player.first_name || player.username || 'Player', avatar: player.photo_url };
            renderLotterySlots();
            if (slotsTaken.every(x => x)) {
                setTimeout(startLottery, 500);
            }
        }
        
        function startLottery() {
            // Простая симуляция выбора победителя
            const participants = slotsTaken.filter(Boolean);
            if (participants.length === 0) return;
            const winner = participants[Math.floor(Math.random() * participants.length)];
            const reward = (lotteryConfigs[currentLottery].price * participants.length) * 0.9;
            document.getElementById('lottery-status').textContent = `🎉 Победитель: ${winner.name}! Выигрыш: ${reward.toFixed(2)} TON`;
        }


        // --- ОБРАБОТЧИКИ СОБЫТИЙ ---
        window.addEventListener('load', () => {
            initializeApp();
            
            // Меню
            Object.keys(sections).forEach(menuId => {
                document.getElementById(menuId)?.addEventListener('click', () => {
                    setActiveSection(menuId);
                    if (menuId === 'menu-deposit') sendTonTransaction();
                });
            });
            
            // Кнопки Deposit/Withdraw
            ['shared-deposit-btn', 'action-deposit'].forEach(id => document.getElementById(id).addEventListener('click', sendTonTransaction));
            ['shared-withdraw-btn', 'action-withdraw'].forEach(id => document.getElementById(id).addEventListener('click', () => showNotification('Функция вывода в разработке.')));
            document.getElementById('action-history').addEventListener('click', () => showNotification('История транзакций скоро появится.'));

            // Кошелек
            document.getElementById('connect-wallet-button').addEventListener('click', () => walletAddress ? disconnectWallet() : connectWallet());
            
            // Реферальная ссылка
            document.getElementById('copy-referral-link').addEventListener('click', (e) => {
                const link = document.getElementById('referral-link').textContent;
                navigator.clipboard.writeText(link).then(() => {
                    const button = e.currentTarget;
                    const originalText = button.textContent;
                    button.textContent = 'Скопировано!';
                    setTimeout(() => button.textContent = originalText, 2000);
                    showNotification('Ссылка скопирована!');
                }).catch(() => showNotification('Не удалось скопировать ссылку.'));
            });
            
            // Навигация по играм
            const gameNav = {
                'open-pvp': 'pvp-submenu', 'open-solo': 'solo-submenu', 'open-lottery': 'lottery-submenu',
                'open-tictactoe': 'game-view-tictactoe', 'open-rps': 'game-view-rps', 'open-dice': 'game-view-dice',
            };
            Object.entries(gameNav).forEach(([btnId, viewId]) => {
                document.getElementById(btnId).addEventListener('click', () => {
                    document.getElementById('games-category').classList.remove('active-sub-view');
                    document.querySelectorAll('.game-submenu, .game-view-container').forEach(el => el.classList.remove('active-sub-view'));
                    document.getElementById(viewId).classList.add('active-sub-view');
                    document.getElementById('games-section-title').textContent = document.getElementById(btnId).querySelector('h2').textContent;
                });
            });

            const showMainGames = () => {
                document.querySelectorAll('.game-submenu, .game-view-container').forEach(el => el.classList.remove('active-sub-view'));
                document.getElementById('games-category').classList.add('active-sub-view');
                document.getElementById('games-section-title').textContent = 'Игровой центр LUDO';
            };
            document.querySelectorAll('.back-to-main').forEach(btn => btn.addEventListener('click', showMainGames));
            document.querySelectorAll('.back-to-pvp').forEach(btn => btn.addEventListener('click', () => {
                 document.querySelectorAll('.game-view-container').forEach(el => el.classList.remove('active-sub-view'));
                 document.getElementById('pvp-submenu').classList.add('active-sub-view');
                 document.getElementById('games-section-title').textContent = 'PVP Игры';
            }));
             document.querySelectorAll('.back-to-lottery').forEach(btn => btn.addEventListener('click', () => {
                 document.getElementById('lottery-game-view').classList.remove('active-sub-view');
                 document.getElementById('lottery-submenu').classList.add('active-sub-view');
                 document.getElementById('games-section-title').textContent = 'Bulba Lottery';
            }));
            
            // SOLO (placeholders)
            document.getElementById('open-wheel').addEventListener('click', () => showNotification('Колесо скоро появится.'));
            document.getElementById('open-cases').addEventListener('click', () => showNotification('Кейсы скоро появятся.'));
            
            // Лотерея
            ['10', '100', '1000'].forEach(type => {
                document.getElementById(`open-lottery-${type}`).addEventListener('click', () => openLottery(type));
            });

            // Крестики-нолики
            cells.forEach(cell => cell.addEventListener('click', handleCellClick));
            document.getElementById('new-game-button').addEventListener('click', handleRestartGame);
            
            window.Telegram?.WebApp?.ready();
        });
    </script>
</body>
</html>
